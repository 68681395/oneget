# Copyright (C) 2014 Microsoft Corporation

###
### OneGet/Utility/sources
###

!include ..\common.inc

TARGETNAME          = Microsoft.PackageManagement.Utility
TARGETTYPE          = DYNLINK

## !include $(PROJECT_ROOT)\monad\nttargets\build\sources.inc
OUTPUT_PATH=$(OBJ_PATH)\$(O)

SOURCES_PATH = .\

###
### Note: This really only works if you have a single .resx file.
###       if an additional .resx file is added at some point in the future
###       you have to either *always* pre-gen the .cs files or figure another
###       way.
###
RESOURCES_NAMESPACE=Microsoft.PackageManagement.Utility.Resources
GENERATED_RESOURCES_SOURCE=$(OUTPUT_PATH)\Messages.cs
RESGEN_FLAGS = /str:cs,$(RESOURCES_NAMESPACE),Messages,$(OUTPUT_PATH)\Messages.cs

### The resources that we want to include in the project
RESGEN_SOURCES=\
    Resources\Messages.resx,$(OUTPUT_PATH)\$(RESOURCES_NAMESPACE).Messages.resources

### Note: I'm not entirely sure if the base resources are supposed to be
###       LANGUAGE_SPECIFIC_MANAGED_RESOURCES =
###       or
###       LANGUAGE_NEUTRAL_MANAGED_RESOURCES =
###       so I've left it as SPECIFIC..

LANGUAGE_SPECIFIC_MANAGED_RESOURCES =\
    $(OUTPUT_PATH)\$(RESOURCES_NAMESPACE).Messages.resources,$(RESOURCES_NAMESPACE).Messages.resources

PASS2_BINPLACE=\
    #(OUTPUT_PATH)\$(TARGETNAME).resources.dll

### Referenced assemblies

REFERENCES=\
	$(CLR_REF_PATH)\Microsoft.CSharp.metadata_dll; \
	$(CLR_REF_PATH)\System.metadata_dll; \
	$(CLR_REF_PATH)\System.Core.metadata_dll; \
	$(CLR_REF_PATH)\System.Data.metadata_dll; \
	$(CLR_REF_PATH)\System.Configuration.metadata_dll; \
	$(CLR_REF_PATH)\System.Data.DataSetExtensions.metadata_dll; \
	$(CLR_REF_PATH)\System.Security.metadata_dll; \
	$(CLR_REF_PATH)\System.Xml.metadata_dll; \
	$(CLR_REF_PATH)\System.Xml.Linq.metadata_dll;

#region sourcefiles
SOURCES=\
	Async\AsyncAction.cs \
 	Async\AsyncActionExtensions.cs \
 	Async\EmptyAsyncEnumerable.cs \
 	Async\IAsyncAction.cs \
 	Async\IAsyncEnumerable.cs \
 	Async\IAsyncValue.cs \
 	Collections\AbstractDictionary.cs \
 	Collections\BlockingCollection.cs \
 	Collections\CancellableEnumerator.cs \
 	Collections\DelegateDictionary.cs \
 	Collections\EnumerableExtensions.cs \
 	Collections\FilenameEqualityComparer.cs \
 	Collections\HashSet.cs \
 	Collections\ICancellableEnumerator.cs \
 	Collections\List.cs \
 	Collections\MutableEnumerable.cs \
 	Collections\OrderedDictionary.cs \
 	Collections\PathEqualityComparer.cs \
 	Collections\ReadOnlyDelegateDictionary.cs \
 	Collections\ReEnumerable.cs \
 	Collections\VirtualEnumerator.cs \
 	Extensions\CollectionExtensions.cs \
 	Extensions\DelegateExtensions.cs \
 	Extensions\DictionaryExtensions.cs \
 	Extensions\ExceptionExtensions.cs \
 	Extensions\FilesystemExtensions.cs \
 	Extensions\HashtableExtensions.cs \
 	Extensions\Singleon.cs \
 	Extensions\StringExtensions.cs \
 	Extensions\TaskExtensions.cs \
 	Extensions\ThreadPerTaskScheduler.cs \
 	Extensions\TwoTypes.cs \
 	Extensions\TypeExtensions.cs \
 	Extensions\Types.cs \
 	Extensions\XmlExtensions.cs \
 	Platform\AdminPrivilege.cs \
 	Platform\AsyncProcess.cs \
 	Platform\CLSID.cs \
 	Platform\EnvironmentUtility.cs \
 	Platform\IID.cs \
 	Platform\IShellLink.cs \
 	Platform\KnownFolder.cs \
 	Platform\KnownFolders.cs \
 	Platform\Manifest.cs \
 	Platform\MoveFileFlags.cs \
 	Platform\NativeMethods.cs \
 	Platform\ShellApplication.cs \
 	Platform\ShellLink.cs \
 	Platform\ShellLinkClass.cs \
 	Platform\SLGP.cs \
 	Platform\STGM.cs \
 	Platform\Win32FindData.cs \
 	Platform\WinTrustData.cs \
 	Platform\WinTrustFileInfo.cs \
 	Plugin\AssignableTypeComparer.cs \
 	Plugin\DynamicInterface.cs \
 	Plugin\DynamicInterfaceExtensions.cs \
 	Plugin\DynamicType.cs \
 	Plugin\DynamicTypeExtensions.cs \
 	Plugin\FluentIlExtensions.cs \
 	Plugin\PrivateProxy.cs \
 	Plugin\RequiredAttribute.cs \
 	Plugin\WrappedAction.cs \
 	Plugin\WrappedDelegate.cs \
 	Plugin\WrappedFunc.cs \
 	Versions\FourPartVersion.cs \
 	Versions\TwoPartVersion.cs \
 	Xml\DynamicAttributes.cs \
 	Xml\DynamicElement.cs \
 	Xml\DynamicElementEnumerable.cs \
	$(GENERATED_RESOURCES_SOURCE)

#endregion

INTERNALS_VISIBLE_TO=\
	Microsoft.PackageManagement, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING); \
	Microsoft.PackageManagement.Test, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING); \
	Microsoft.PackageManagement.Utility.PowerShell, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);
