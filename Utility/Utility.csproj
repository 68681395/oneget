<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{7044B856-6D51-498F-8192-01F219908192}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Microsoft.OneGet.Utility</RootNamespace>
    <AssemblyName>Microsoft.OneGet.Utility</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition=" '$(SolutionDir)'=='' ">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), OneGet.sln))\</SolutionDir>
    <SolutionPath Condition="$(SolutionPath) == '' Or $(SolutionPath) == '*Undefined*'">$(SolutionDir)\OneGet.sln</SolutionPath>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), solution.props))\solution.props" Condition="Exists('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), solution.props))\solution.props')" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PSBeforeBuild><![CDATA[
     $v2 = ((Get-Date).Year).ToString().SubString(2)
     $v3 = ((Get-Date).DayOfYear)
     $v4 = ([int](((get-date).Ticks - ((get-date).Date).Ticks) / 13200000)).ToString()
     $v = "1.$v2.$v3.$v4"
     $txt = (get-content $(SolutionDir)assembly-version.cs) -replace "\d*\.\d*\.\d*\.\d*",$v
     set-content -path $(SolutionDir)assembly-version.cs -Value $txt
    ]]></PSBeforeBuild>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Security" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Async\AsyncActionExtensions.cs" />
    <Compile Include="Async\AsyncAction.cs" />
    <Compile Include="Collections\EnumerableExtensions.cs" />
    <Compile Include="Async\EmptyAsyncEnumerable.cs" />
    <Compile Include="Collections\FilenameEqualityComparer.cs" />
    <Compile Include="Collections\HashSet.cs" />
    <Compile Include="Async\IAsyncAction.cs" />
    <Compile Include="Async\IAsyncValue.cs" />
    <Compile Include="Async\IAsyncEnumerable.cs" />
    <Compile Include="Collections\ICancellableEnumerator.cs" />
    <Compile Include="Collections\MutableEnumerable.cs" />
    <Compile Include="Collections\BlockingCollection.cs" />
    <Compile Include="Collections\PathEqualityComparer.cs" />
    <Compile Include="Collections\ReEnumerable.cs" />
    <Compile Include="Extensions\TaskExtensions.cs" />
    <Compile Include="Extensions\ThreadPerTaskScheduler.cs" />
    <Compile Include="Extensions\TwoTypes.cs" />
    <Compile Include="Extensions\Types.cs" />
    <Compile Include="Extensions\Singleon.cs" />
    <Compile Include="Extensions\XmlExtensions.cs" />
    <Compile Include="Platform\ShellLinkClass.cs" />
    <Compile Include="Platform\WinTrustData.cs" />
    <Compile Include="Platform\WinTrustFileInfo.cs" />
    <Compile Include="Platform\Manifest.cs" />
    <Compile Include="Plugin\WrappedAction.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WrappedAction.tt</DependentUpon>
    </Compile>
    <Compile Include="Plugin\WrappedFunc.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WrappedFunc.tt</DependentUpon>
    </Compile>
    <Compile Include="Plugin\WrappedDelegate.cs" />
    <Compile Include="Collections\AbstractDictionary.cs" />
    <Compile Include="Collections\CancellableEnumerator.cs" />
    <Compile Include="Collections\DelegateDictionary.cs" />
    <Compile Include="Collections\List.cs" />
    <Compile Include="Collections\OrderedDictionary.cs" />
    <Compile Include="Collections\ReadOnlyDelegateDictionary.cs" />
    <Compile Include="Collections\VirtualEnumerator.cs" />
    <Compile Include="Plugin\AssignableTypeComparer.cs" />
    <Compile Include="Plugin\DynamicInterface.cs" />
    <Compile Include="Plugin\DynamicInterfaceExtensions.cs" />
    <Compile Include="Plugin\DynamicTypeExtensions.cs" />
    <Compile Include="Plugin\FluentIlExtensions.cs" />
    <Compile Include="Plugin\PrivateProxy.cs" />
    <Compile Include="Plugin\DynamicType.cs" />
    <Compile Include="Plugin\RequiredAttribute.cs" />
    <Compile Include="Extensions\DelegateExtensions.cs" />
    <Compile Include="Extensions\CollectionExtensions.cs" />
    <Compile Include="Extensions\DictionaryExtensions.cs" />
    <Compile Include="Extensions\ExceptionExtensions.cs" />
    <Compile Include="Extensions\FilesystemExtensions.cs" />
    <Compile Include="Extensions\HashtableExtensions.cs" />
    <Compile Include="Platform\AdminPrivilege.cs" />
    <Compile Include="Platform\CLSID.cs" />
    <Compile Include="Platform\EnvironmentUtility.cs" />
    <Compile Include="Platform\IID.cs" />
    <Compile Include="Platform\IShellLink.cs" />
    <Compile Include="Platform\KnownFolder.cs" />
    <Compile Include="Platform\MoveFileFlags.cs" />
    <Compile Include="Platform\NativeMethods.cs" />
    <Compile Include="Extensions\StringExtensions.cs" />
    <Compile Include="Extensions\TypeExtensions.cs" />
    <Compile Include="Platform\AsyncProcess.cs" />
    <Compile Include="Platform\KnownFolders.cs" />
    <Compile Include="Platform\ShellLink.cs" />
    <Compile Include="Platform\SLGP.cs" />
    <Compile Include="Platform\STGM.cs" />
    <Compile Include="Platform\ShellApplication.cs" />
    <Compile Include="Platform\Win32FindData.cs" />
    <Compile Include="Resources\Messages.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Messages.resx</DependentUpon>
    </Compile>
    <Compile Include="Versions\FourPartVersion.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Versions\TwoPartVersion.cs" />
    <Compile Include="Xml\DynamicAttributes.cs" />
    <Compile Include="Xml\DynamicElement.cs" />
    <Compile Include="Xml\DynamicElementEnumerable.cs" />
    <Compile Include="$(SolutionDir)assembly-version.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Plugin\WrappedAction.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>WrappedAction.cs</LastGenOutput>
    </None>
    <None Include="Plugin\WrappedFunc.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>WrappedFunc.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources\Messages.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <SubType>Designer</SubType>
      <LastGenOutput>Messages.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="BeforeBuild" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PowerShell ScriptBlock="$(PSBeforeBuild)" />
  </Target>
  <UsingTask TaskName="PowerShell" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <ScriptBlock ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll" />
      <Code Type="Class" Language="cs"><![CDATA[
    public class PowerShell : Microsoft.Build.Tasks.Exec {
        public string ScriptBlock {set { EchoOff=true; Command = string.Format( "@powershell \"Invoke-Command -ScriptBlock {{ $errorActionPreference='Stop'; {0} ; exit $LASTEXITCODE }} \"",  value.Replace("\"","\\\"").Replace("\r\n",";").Replace("\n",";").Replace("\r",";")); } }
    }]]></Code>
    </Task>
  </UsingTask>
</Project>